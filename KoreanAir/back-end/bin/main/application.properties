#--------------------------------------------------
# JPA
#--------------------------------------------------
spring.main.allow-bean-definition-overriding: true

#--------------------------------------------------
# MySQL
#--------------------------------------------------
# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl=true

# https://engkimbs.tistory.com/794
# spring.jpa.hibernate.dll-auto : create, create-drop, update, validate, none 옵션을 설정할 수 있습니다.
# create : JPA가 DB와 상호작용할 때 기존에 있던 스키마(테이블)을 삭제하고 새로 만드는 것을 뜻합니다.
# create-drop : JPA 종료 시점에 기존에 있었던 테이블을 삭제합니다.
# update : JPA에 의해 변경된 부분만 반영합니다.
# validate : 엔티티와 테이블이 정상 매핑되어 있는지만 검증합니다.
# none : 초기화 동작을 사용하지 않습니다.
spring.jpa.hibernate.ddl-auto=create

# API 호출시, SQL 문을 콘솔에 출력한다. 
spring.jpa.show-sql=true
 
# MySQL 을 사용할 것.
spring.jpa.database=mysql

# application.properties
spring.datasource.hikari.maximum-pool-size=4

spring.datasource.url=jdbc:mysql://localhost:3306/koreanair?useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&useSSL=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=cmd%*%&1591
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

# 드라이버가 createClub을 지원하지 않아서 warning 뜨는 것을 방지
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
