buildscript {
	ext {
		// 플러그인 버전
		querydslPluginVersion = '1.0.10'
	}
	repositories {
		// 플러그인 저장소
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		// querydsl 플러그인 의존성 등록
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.0.M6'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.backend'
version = '0.0.2'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'

	// JWT
	compile group: 'com.auth0', name: 'java-jwt', version: '3.1.0'

	// Jackson
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.7.4'

	// querydsl
	compile("com.querydsl:querydsl-jpa")
	compile("com.querydsl:querydsl-apt")

	// 구글 클라우드 store api
	compile group: 'com.google.cloud', name: 'google-cloud-storage', version: '1.100.0'

	// https://mvnrepository.com/artifact/joda-time/joda-time
	compile group: 'joda-time', name: 'joda-time', version: '2.9.9'

	// JAVA IMG 라이브러리
	compile group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'

	// JSON 변환기
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
}

test {
	useJUnitPlatform()
}

// querydsl 적용
apply plugin: "com.ewerk.gradle.plugins.querydsl" // Plugin 적용
def querydslSrcDir = 'src/main/generated' // QClass 생성 위치

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslSrcDir
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}

// JAR 설정
bootJar {
	archiveBaseName = 'jjunpro'
	archiveFileName = 'project.jar'
	archiveVersion = "0.0.1"
}