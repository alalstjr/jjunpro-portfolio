plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'

	/* QueryDSL Setting */
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.jjunpro'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'junit:junit:4.12'

    /* 구글 클라우드 store api */
    compile group: 'com.google.cloud', name: 'google-cloud-storage', version: '1.100.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    /* JWT */
    compile group: 'com.auth0', name: 'java-jwt', version: '3.1.0'

	/* QueryDSL Setting */
    compile("com.querydsl:querydsl-jpa")
    compile("com.querydsl:querydsl-apt")

    /* joda-time */
    compile group: 'joda-time', name: 'joda-time', version: '2.9.9'

    /* Custom Libs dir Setting */
    compile fileTree(dir: 'libs', include: ['*.jar'])

    /* 썸네일 제작 라이브러리 */
    compile group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'

    /* JSON */
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.2'

}

test {
    useJUnitPlatform()
}

/**
 * QueryDSL Setting
 * */
def querydslSrcDir = 'src/main/generated'
// def querydslSrcDir = 'src/main/java/com/jjunpro/project/generated' // QClass 생성 위치

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}